// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  resumes       Resume[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Resume {
  id         String   @id @default(cuid())
  fileName   String
  fileUrl    String
  fileType   String
  fileSize   Int
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  analysis   Analysis?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Analysis {
  id              String   @id @default(cuid())
  resumeId        String   @unique
  resume          Resume   @relation(fields: [resumeId], references: [id], onDelete: Cascade)
  overallScore    Int
  skillsScore     Int
  experienceScore Int
  educationScore  Int
  formatScore     Int
  feedback        String   @db.Text
  strengths       String[] 
  weaknesses      String[]
  suggestions     String[]
  keywords        String[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}